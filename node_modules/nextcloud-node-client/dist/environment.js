"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const error_1 = __importDefault(require("./error"));
class Environment {
    static getMinLogLevel() {
        return process.env.MIN_LOG_LEVEL || "error";
    }
    static getNextcloudUrl() {
        if (!process.env.NEXTCLOUD_URL) {
            throw new error_1.default("NCEnvironment: NEXTCLOUD_URL not defined in environment", "ERR_NEXTCLOUD_URL_NOT_DEFINED");
        }
        return process.env.NEXTCLOUD_URL;
    }
    static getUserName() {
        if (!process.env.NEXTCLOUD_USERNAME) {
            throw new error_1.default("NCEnvironment: NEXTCLOUD_USERNAME not defined in environment", "ERR_NEXTCLOUD_USERNAME_NOT_DEFINED");
        }
        return process.env.NEXTCLOUD_USERNAME;
    }
    static getPassword() {
        if (!process.env.NEXTCLOUD_PASSWORD) {
            throw new error_1.default("NCEnvironment: NEXTCLOUD_PASSWORD not defined in environment", "ERR_NEXTCLOUD_PASSWORD_NOT_DEFINED");
        }
        return process.env.NEXTCLOUD_PASSWORD;
    }
    static getRecordingActiveIndicator() {
        if ((process.env.TEST_RECORDING_ACTIVE &&
            (process.env.TEST_RECORDING_ACTIVE === "0" || process.env.TEST_RECORDING_ACTIVE === "false" || process.env.TEST_RECORDING_ACTIVE === "inactive")) ||
            !process.env.TEST_RECORDING_ACTIVE) {
            return false;
        }
        else {
            return true;
        }
    }
}
exports.default = Environment;

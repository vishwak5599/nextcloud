"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("./client");
/**
 * The user group class represents a user user in nextcloud.
 * spec: https://docs.nextcloud.com/server/latest/admin_manual/configuration_user/instruction_set_for_groups.html
 * id
 * getSubAdmins
 * getMembers
 */
class UserGroup {
    constructor(client, id) {
        this.id = id;
        this.client = client;
    }
    /**
     * deletes the user group
     * @throws UserGroupDeletionFailedError
     */
    delete() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                return yield this.client.deleteUserGroup(this.id);
            }
            catch (e) {
                if (e instanceof client_1.UserGroupDoesNotExistError) {
                    return;
                }
                throw e;
            }
        });
    }
    getMemberUserIds() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.client.getUserGroupMembers(this.id);
        });
    }
    getSubadminUserIds() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.client.getUserGroupSubadmins(this.id);
        });
    }
}
exports.default = UserGroup;
